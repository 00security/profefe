DROP TABLE IF EXISTS pprof_profile_labels;

CREATE TABLE pprof_profile_labels (
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    service     TEXT NOT NULL,
    instance_id TEXT NOT NULL,
    labels      jsonb,

    UNIQUE (service, instance_id, labels)
);

CREATE INDEX pprof_profile_labels_service_idx ON pprof_profile_labels (service);

CREATE INDEX pprof_profile_labels_labels_idx ON pprof_profile_labels USING GIN (labels);

DROP TABLE IF EXISTS pprof_profiles;

CREATE TABLE pprof_profiles (
    profile_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at  TIMESTAMPTZ NOT NULL,
    received_at TIMESTAMPTZ NOT NULL,
    type        SMALLINT    NOT NULL,
    period      BIGINT,
    labels_id   INTEGER REFERENCES pprof_profile_labels
);

CREATE INDEX pprof_profiles_created_at_idx ON pprof_profiles (created_at DESC);

CREATE TYPE pprof_frame AS (
    func_id INTEGER,
    line    INTEGER
);

DROP TABLE IF EXISTS pprof_mappings;

CREATE TABLE pprof_mappings (
    mapping_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mapping    jsonb NOT NULL,

    UNIQUE (mapping)
);

DROP TABLE IF EXISTS pprof_functions;

CREATE TABLE pprof_functions (
    func_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    func_name TEXT NOT NULL,
    file_name TEXT NOT NULL,

    UNIQUE (func_name, file_name)
);

DROP TABLE IF EXISTS pprof_locations;

CREATE TABLE pprof_locations (
    location_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mapping_id  INTEGER REFERENCES pprof_mappings,
    address     BIGINT,
    lines       pprof_frame[]
);

DROP TABLE IF EXISTS pprof_samples_cpu;

CREATE TABLE pprof_samples_cpu (
    profile_id    INTEGER REFERENCES pprof_profiles ON DELETE CASCADE,
    locations     INTEGER[], -- array of location_ids
    samples_count BIGINT,
    cpu_nanos     BIGINT,
    labels        jsonb
);

DROP TABLE IF EXISTS pprof_samples_heap;

CREATE TABLE pprof_samples_heap (
    profile_id    INTEGER REFERENCES pprof_profiles ON DELETE CASCADE,
    locations     INTEGER[], -- array of location_ids
    alloc_objects BIGINT,
    alloc_bytes   BIGINT,
    inuse_objects BIGINT,
    inuse_bytes   BIGINT,
    labels        jsonb
);
